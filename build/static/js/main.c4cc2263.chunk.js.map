{"version":3,"sources":["sdk components/SdkLocation.tsx","sdk components/SdkApp.tsx","components/ConfigScreen.tsx","sdk components/SdkEditor.tsx","sdk components/SdkEntry.tsx","sdk components/SdkContentType.tsx","sdk components/SdkParams.tsx","sdk components/SdkDialog.tsx","components/EntryEditor.tsx","components/AccessScreen.tsx","components/LocalesScreen.tsx","components/NavigatorScreen.tsx","components/SpaceScreen.tsx","components/UserScreen.tsx","components/Page.tsx","components/Sidebar.tsx","sdk components/SdkField.tsx","components/Field.tsx","components/Dialog.tsx","index.tsx"],"names":["SdkLocation","props","state","location","this","sdk","is","locations","LOCATION_APP_CONFIG","setState","LOCATION_DIALOG","LOCATION_ENTRY_EDITOR","LOCATION_ENTRY_FIELD","LOCATION_ENTRY_FIELD_SIDEBAR","LOCATION_PAGE","console","log","tagType","label","Component","SdkApp","parameters","currentState","isInstalled","app","getParameters","params","getCurrentState","appIsInstalled","Installed","src","collapsed","ParametersComponent","onTextChange","event","preventDefault","onParamChange","name","id","labelText","onChange","value","param1","param2","Config","onConfigure","a","JSON","stringify","targetState","bind","parse","target","setReady","className","icon","size","SdkEditor","localeUpdatedValue","showDisabledFields","editor","onLocaleSettingsChanged","onShowDisabledFieldsChanged","editorInterface","SdkEntry","tasks","entryChanged","entry","onSysChanged","getSys","fields","SdkContentType","contentType","SdkParams","installation","instance","SdkDialog","openExtension","e","dialogs","width","test","then","data","openCurrentApp","shouldCloseOnEscapePress","allowHeightOverflow","minHeight","openCurrent","openAlert","title","message","openConfirm","intent","confirmLabel","cancelLabel","onClick","EditorScreen","supportTypes","accessTypes","CreateAccessTable","accessResult","map","access","key","support","filter","type","accessPopulationFunction","Promise","all","length","result","can","AccessScreen","accessResultArray","forEach","value2","push","CreateLocalesTable","locales","default","LocalesScreen","user","NavigatorComponent","entryId","buttonType","navigator","openEntry","error","notifier","NavigatorScreen","SpaceScheduleComponent","scheduleActions","dragHandleComponent","color","scheduleAction","entity","sys","scheduledFor","datetime","linkType","SpaceUserComponent","users","items","firstName","email","SpaceEditorInterface","editorInterfaces","controls","SpaceScreen","space","getAllScheduledActions","scheduledActions","getUsers","getEditorInterfaces","scheduledActionsString","usersString","editorInterfaceString","CreateUserTable","lastName","String","spaceMembership","admin","UserScreen","code","htmlFor","installationParams","Page","installationParameters","css","margin","role","withDivider","render","tabprops","selected","pathname","onSelect","history","path","routeProps","Sidebar","SdkField","currentTarget","field","setValue","removeValue","fieldValue","fieldValueChanges","getValue","onValueChanged","FieldScreen","onButtonClick","showModal","instanceParams","window","updateHeight","instanceParameters","DialogScreen","init","root","document","getElementById","component","LOCATION_ENTRY_SIDEBAR","componentLocationSetting"],"mappings":"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","file":"static/js/main.c4cc2263.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Card, Pill, Tag } from '@contentful/forma-36-react-components';\nimport ReactJson from 'react-json-view'\nimport { locations } from 'contentful-ui-extensions-sdk';\nexport interface AppInstallationParameters { }\n\ninterface ConfigProps {\n  sdk: any;\n}\n\ninterface ConfigState {\n  location: any\n}\n\n\nexport default class SdkLocation extends Component<ConfigProps, ConfigState> {\n  constructor(props: any) {\n    super(props);\n    this.state = { location: '' }\n  }\n\n  async componentDidMount() {\n    if(this.props.sdk.location.is(locations.LOCATION_APP_CONFIG)){\n      this.setState({location:'locations.LOCATION_APP_CONFIG'})\n    }\n    if(this.props.sdk.location.is(locations.LOCATION_DIALOG)){\n      this.setState({location:'locations.LOCATION_DIALOG'})\n    }\n    if(this.props.sdk.location.is(locations.LOCATION_ENTRY_EDITOR)){\n      this.setState({location:'locations.LOCATION_ENTRY_EDITOR'})\n    }\n    if(this.props.sdk.location.is(locations.LOCATION_ENTRY_FIELD)){\n      this.setState({location:'locations.LOCATION_ENTRY_FIELD'})\n    }\n    if(this.props.sdk.location.is(locations.LOCATION_ENTRY_FIELD_SIDEBAR)){\n      this.setState({location:'locations.LOCATION_ENTRY_FIELD_SIDEBAR'})\n    }\n    if(this.props.sdk.location.is(locations.LOCATION_PAGE)){\n      this.setState({location:'locations.LOCATION_PAGE'})\n    }\n \n\n    // switch (this.props.sdk.location) {\n    //   case locations.LOCATION_APP_CONFIG:\n    //     this.setState({ location: 'locations.LOCATION_APP_CONFIG' })\n    //     break;\n    //   case locations.LOCATION_DIALOG:\n    //     this.setState({ location: 'locations.LOCATION_DIALOG' })\n    //     break;\n    //   case locations.LOCATION_ENTRY_EDITOR:\n    //     this.setState({ location: 'locations.LOCATION_ENTRY_EDITOR' })\n    //     break;\n    //   case locations.LOCATION_ENTRY_FIELD:\n    //     this.setState({ location: 'locations.LOCATION_ENTRY_FIELD' })\n    //     break;\n    //   case locations.LOCATION_ENTRY_FIELD_SIDEBAR:\n    //     this.setState({ location: 'locations.LOCATION_ENTRY_FIELD_SIDEBAR' })\n    //     break;\n    //   case locations.LOCATION_PAGE:\n    //     this.setState({ location: 'locations.LOCATION_PAGE' })\n    //     break;\n    // }\n\n    console.log('location',this.state.location)\n  }\n\n  render() {\n    return (\n      <>\n        <Card>\n          <Tag tagType=\"primary\">sdk.location</Tag>\n          <br />\n          <br />\n\n          <Pill label=\"sdk.location.is\"/>\n                    <div>\n                        {this.state.location}\n                    </div>\n        </Card>\n     \n      </>\n    )\n  }\n\n}\n\n\n","import React, { Component } from 'react';\nimport {Pill,Tag,Card } from '@contentful/forma-36-react-components';\nimport ReactJson from 'react-json-view'\n\nexport interface AppInstallationParameters { }\n\ninterface ConfigProps {\n    sdk: any;\n  }\n  \ninterface ConfigState {\n  parameters:any\n  currentState:any\n  isInstalled:any\n}\n\n\nexport default class SdkApp extends Component<ConfigProps,ConfigState> {\n      constructor(props: any) {\n        super(props);\n         this.state={parameters:{},currentState:{},isInstalled:{}}\n      }\n\n      async componentDidMount() {\n        let params = await this.props.sdk.app.getParameters()\n        let currentState = await this.props.sdk.app.getCurrentState()\n        let appIsInstalled = await this.props.sdk.app.isInstalled()\n\n        this.setState({parameters:params,currentState:currentState,isInstalled:{Installed:appIsInstalled}})\n        \n      }\n\n      render(){\n        return(\n            <>\n              <Card>\n                  <Tag tagType=\"primary\">sdk.app</Tag>\n                   <br />\n                   <br />\n\n                  <Pill label=\"sdk.app.getParameters\"/>\n                  <div>\n                      <ReactJson src={this.state.parameters} collapsed={0}/>\n                  </div>\n                  <Pill label=\"sdk.app.getCurrentState\"/>\n                  <div>\n                      <ReactJson src={this.state.currentState} collapsed={0}/>\n                  </div>\n                  <Pill label=\"sdk.app.isInstalled\"/>\n                  <div>\n                      <ReactJson src={this.state.isInstalled} collapsed={0}/>\n                  </div>\n                </Card>\n            </>\n        )\n      }\n  \n}\n\n\n","import React, { Component } from 'react';\nimport { AppExtensionSDK } from 'contentful-ui-extensions-sdk';\nimport SdkLocation from '../sdk components/SdkLocation'\nimport {Pill,Card,Icon, Heading, Form, Workbench, Paragraph, Tabs, Tab,TextField  } from '@contentful/forma-36-react-components';\nimport SdkApp from '../sdk components/SdkApp'\nimport SdkParams from '../sdk components/SdkParams'\nimport { css } from 'emotion';\n\n\nexport interface AppInstallationParameters { }\n\ninterface ConfigProps {\n  sdk: AppExtensionSDK;\n}\n\ninterface ConfigState {\n  parameters: AppInstallationParameters,\n}\n\nconst ParametersComponent = (props:any)=>{\n  //console.log('ParametersComponent',JSON.stringify(props))\n\n  const onTextChange= (event:any )=>{\n    event.preventDefault() \n    props.onParamChange(event)\n  }\n\n  return(\n    <>\n      <Form>\n           <TextField  name=\"Param 1\" id=\"param1\" labelText=\"Param 1\" onChange={onTextChange} value={props.parameters.param1}></TextField>\n           <TextField  name=\"Param 2\" id=\"param2\" labelText=\"Param 2\" onChange={onTextChange} value={props.parameters.param2}></TextField>\n      </Form>\n    </>\n  )\n}\n\nexport default class Config extends Component<ConfigProps, ConfigState> {\n  constructor(props: any) {\n    super(props);\n    this.state = { parameters: {}}; \n\n    props.sdk.app.onConfigure(() => this.onConfigure());\n    this.onParamChange = this.onParamChange.bind(this)\n  }\n\n  getSDK(){\n    return this.props.sdk\n  }\n\n   onParamChange(event:any) {\n      \n      //TODO: set state of react dictioary\n      let parameters = JSON.parse(JSON.stringify(this.state.parameters))\n      parameters[event.target.id] = event.target.value\n      this.setState({parameters:parameters})\n      console.log(this.state.parameters)\n   }\n\n  async componentDidMount() {\n    // Get current parameters of the app.\n    // If the app is not installed yet, `parameters` will be `null`.\n    const parameters:any = await this.props.sdk.app.getParameters();\n    if(parameters){\n      this.setState({parameters:parameters})\n      console.log('componentDidMount',JSON.stringify(this.state.parameters))\n      console.log('componentDidMount',JSON.stringify(parameters))\n      this.props.sdk.app.setReady();\n    }\n  }\n\n  onConfigure = async () => {\n\n    const currentState = await this.props.sdk.app.getCurrentState();\n    console.log('onConfigure',JSON.stringify(this.state.parameters))\n    return {\n      parameters: this.state.parameters,\n      targetState: currentState\n    };\n  };\n\n  render() {\n    return (\n      <>\n       <Card>\n       <Card>\n       <div className=\"flexbox-container\">\n          <Icon icon=\"ReceiptTrimmed\" size=\"large\"/>\n          <Heading>LOCATION_APP_CONFIG</Heading>\n        </div>\n    \n     \n        <ParametersComponent onParamChange={this.onParamChange} parameters={this.state.parameters}/>  \n        </Card>\n        <SdkLocation sdk={this.props.sdk}/>\n        <SdkApp sdk={this.props.sdk}/>\n\n       </Card>\n      </>\n    );\n  }\n}\n\n\n","import React, { Component } from 'react';\nimport { Tag,Card, Pill } from '@contentful/forma-36-react-components';\nimport ReactJson from 'react-json-view'\n\nexport interface AppInstallationParameters { }\n\ninterface ConfigProps {\n  sdk: any;\n}\n\ninterface ConfigState {\n  localeUpdatedValue: any;\n  showDisabledFields: any;\n}\n\n\nexport default class SdkEditor extends Component<ConfigProps, ConfigState> {\n  constructor(props: any) {\n    super(props);\n    this.state = { localeUpdatedValue: {}, showDisabledFields: true }\n\n    this.props.sdk.editor.onLocaleSettingsChanged((value: any) => {\n      console.log('Locale changed', value)\n      this.setState({ localeUpdatedValue: value })\n    })\n\n    this.props.sdk.editor.onShowDisabledFieldsChanged((value: any) => {\n      console.log('Disabled fields changed', value)\n      this.setState({ showDisabledFields: JSON.stringify(value) })\n    })\n\n  }\n\n  render() {\n    return (\n      <>\n       \n        <Card>\n        <Tag tagType=\"primary\">sdk.editor</Tag>\n                   <br />\n                   <br />\n          <Pill label=\"sdk.editor.editorInterface\" />\n          <div>\n            <ReactJson src={this.props.sdk.editor.editorInterface} collapsed={0} />\n          </div>\n          <Pill label=\"sdk.editor.onLocaleSettingsChanged(callback): function\" />\n          <div>\n            <ReactJson src={this.state.localeUpdatedValue} collapsed={0} />\n          </div>\n          <Pill label=\"sdk.editor.onShowDisabledFieldsChanged(callback): function\" />\n          <div>\n            Show disabled fields: {this.state.showDisabledFields}\n          </div>\n        </Card>\n      </>\n    )\n  }\n\n}\n\n\n","import React, { Component } from 'react';\nimport {Tag,Pill,Card } from '@contentful/forma-36-react-components';\nimport ReactJson from 'react-json-view'\n\n\ninterface ConfigProps {\n    sdk: any;\n  }\n\ninterface ConfigState {\n  tasks:any;\n  entryChanged:any;\n}\n  \n\n\nexport default class SdkEntry extends Component<ConfigProps,ConfigState> {\n\n      constructor(props:any){\n        super(props);\n        this.state={tasks:{},entryChanged:{}}\n\n        this.props.sdk.entry.onSysChanged((value:any)=>{\n          console.log('onSysChanged',value)\n          this.setState({entryChanged:value})\n        })\n      }\n\n      async componentDidMount() {\n\n        //TODO: this is currently not working having to check\n        // let tasks = await this.props.sdk.entry.getTasks()\n        //if(tasks)\n        //   this.setState({tasks:JSON.parse(tasks)})\n        // else  \n        // this.setState({tasks:{}})\n      }\n\n      render(){\n        return(\n            <>\n             <Card>\n                   <Tag tagType=\"primary\">sdk.entry</Tag>\n                   <br />\n                   <br />\n                   <Pill label=\"sdk.entry.getSys()\" />\n                   <div>\n                      <ReactJson src={this.props.sdk.entry.getSys()} collapsed={0}/>\n                  </div>\n                  <Pill label=\"sdk.entry.onSysChanged(callback): function\" />\n                   <div>\n                      <ReactJson src={this.state.entryChanged} collapsed={0}/>\n                  </div>\n                  <Pill label=\"sdk.entry.field[id]\" />\n                   <div>\n                      <ReactJson src={this.props.sdk.entry.fields[\"field1\"]} collapsed={0}/>\n                  </div>\n                  <Pill label=\"sdk.entry.getTasks()\" />\n                   <div>\n                      <ReactJson src={{}} collapsed={1}/>\n                  </div>\n              </Card>\n            </>\n        )\n      }\n  \n}\n\n\n","import React, { Component } from 'react';\nimport { Pill,Card, Tag } from '@contentful/forma-36-react-components';\nimport ReactJson from 'react-json-view'\n\nexport interface AppInstallationParameters { }\n\ninterface ConfigProps {\n  sdk: any;\n}\n\ninterface ConfigState {\n\n}\n\n\nexport default class SdkContentType extends Component<ConfigProps, ConfigState> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <>\n        <Card>\n          <Tag tagType=\"primary\">sdk.contentType</Tag>\n          <br />\n          <br />\n          <Pill label=\"sdk.contentType\" />\n          <div>\n               <ReactJson src={this.props.sdk.contentType} collapsed={0}/>\n          </div>\n        </Card>\n      </>\n    )\n  }\n\n}\n\n\n","import React, { Component } from 'react';\nimport {Card,Tag,Pill } from '@contentful/forma-36-react-components';\nimport ReactJson from 'react-json-view'\n\nexport interface AppInstallationParameters { }\n\ninterface ConfigProps {\n    sdk: any;\n  }\n  \ninterface ConfigState {\n\n}\n\n\nexport default class SdkParams extends Component<ConfigProps,ConfigState> {\n     constructor(props: any) {\n        super(props);\n        \n\n      }\n\n      render(){\n        return(\n            <>\n                    <Card>\n                      <Tag tagType=\"primary\">sdk.parameters</Tag>\n                                <br />\n                                <br />\n                        <Pill label=\"sdk.parameters.installation\" />\n                        <div>\n                          <ReactJson src={this.props.sdk.parameters.installation} collapsed={0} />\n                        </div>\n                        <Pill label=\"sdk.parameters.instance\" />\n                        <div>\n                          <ReactJson src={this.props.sdk.parameters.instance} collapsed={0} />\n                        </div>\n                    </Card>\n            </>\n        )\n      }\n  \n}\n\n\n","import React, { Component } from 'react';\nimport {Button,Card,Tag,Pill } from '@contentful/forma-36-react-components';\nimport ReactJson from 'react-json-view'\n\nexport interface AppInstallationParameters { }\n\ninterface ConfigProps {\n    sdk: any;\n  }\n  \ninterface ConfigState {\n\n}\n\n\n\nexport default class SdkDialog extends Component<ConfigProps,ConfigState> {\n     constructor(props: any) {\n        super(props);\n        \n\n      }\n\n      openExtension =(e:any)=>{\n          this.props.sdk.dialogs.openExtension({\n            id:'dialog',\n            width:500,\n            parameters:{test:'test',value:42}\n          }).then((data:any) =>{\n            console.log(data)\n          })\n      }\n\n      openCurrentApp =(e:any)=>{\n        this.props.sdk.dialogs.openCurrentApp({\n          id:'dialog',\n          width:1000,\n          shouldCloseOnEscapePress:true,\n          allowHeightOverflow:true,\n          minHeight:500,\n          parameters:{test:'test',value:42}\n        }).then((data:any) =>{\n          console.log(data)\n        })\n      }\n\n      openCurrent =(e:any)=>{\n        this.props.sdk.dialogs.openCurrent({\n          id:'dialog',\n          width:1000,\n          minHeight:500,\n          shouldCloseOnEscapePress:true,\n          allowHeightOverflow:true,\n          parameters:{test:'test',value:42}\n        }).then((data:any) =>{\n          console.log(data)\n        })\n      }\n\n      openAlert =(e:any)=>{\n        this.props.sdk.dialogs.openAlert({\n          title:'alert title',\n          message:'alert message'\n        }).then((data:any) =>{\n          console.log(data)\n        })\n      }\n\n      openConfirm =(e:any)=>{\n        this.props.sdk.dialogs.openConfirm({\n          title: 'My question',\n          message: 'What is your answer?',\n          intent: 'positive',\n          confirmLabel: 'Yes!',\n          cancelLabel: 'No',\n        }).then((data:any) =>{\n          console.log(data)\n        })\n      }\n\n      render(){\n        return(\n            <>\n                    <Card>\n                      <Tag tagType=\"primary\">sdk.dialogs</Tag>\n                                <br />\n                                <br />\n                        {/* <Pill label=\"sdk.dialogs.openExtension\" />\n                        <div>\n                          <Button onClick={this.openExtension}>sdk.dialogs.openExtension</Button>\n                        </div> */}\n\n                        {/* <Pill label=\"sdk.dialogs.openCurrentApp\" /> */}\n                        <div>\n                          <Button onClick={this.openCurrentApp}>sdk.dialogs.openCurrentApp</Button>\n                        </div>\n                        <br />\n                        <div>\n                          <Button onClick={this.openCurrent}>sdk.dialogs.openCurrent</Button>\n                        </div>\n                        <br />\n                        <div>\n                          <Button onClick={this.openAlert}>sdk.dialogs.openAlert</Button>\n                        </div>\n                        <br />\n                        <div>\n                          <Button onClick={this.openConfirm}>sdk.dialogs.openConfirm</Button>\n                        </div>\n                    </Card>\n            </>\n        )\n      }\n  \n}\n\n\n","import React, { Component } from 'react';\nimport { EditorExtensionSDK } from 'contentful-ui-extensions-sdk';\nimport SdkLocation from '../sdk components/SdkLocation'\nimport SdkEditor from '../sdk components/SdkEditor'\nimport SdkEntry from '../sdk components/SdkEntry'\nimport SdkContentType from '../sdk components/SdkContentType'\nimport SdkParams from '../sdk components/SdkParams'\nimport SdkDialog from '../sdk components/SdkDialog'\nimport { Card,Icon,Heading } from '@contentful/forma-36-react-components';\ninterface EditorProps {\n  sdk: EditorExtensionSDK;\n}\n\n\nexport default class EditorScreen extends Component<EditorProps> {\n\n  constructor(props: any) {\n    super(props)\n\n  }\n\n  render() {\n    return (<>\n    <Card>\n       <div className=\"flexbox-container\">\n        <Icon icon=\"ReceiptTrimmed\" size=\"large\"/>\n        <Heading>LOCATION_ENTRY_EDITOR</Heading>\n       </div>\n      <SdkLocation sdk={this.props.sdk}/>\n      <SdkEditor sdk={this.props.sdk}/>\n      <SdkEntry sdk={this.props.sdk}/>\n      <SdkContentType sdk={this.props.sdk}/>\n      <SdkParams sdk={this.props.sdk}/>\n      <SdkDialog sdk={this.props.sdk}/>\n    </Card>\n    </>)\n\n  }\n\n}\n\n\n\n\n","import React, { Component } from 'react';\nimport {Table,TableHead,TableCell,TableBody, TableRow,Spinner,Pill } from '@contentful/forma-36-react-components';\nimport { PageExtensionSDK } from 'contentful-ui-extensions-sdk';\n\n\nexport interface AppInstallationParameters { }\n\ninterface ConfigProps {\n    sdk: PageExtensionSDK;\n  }\n  \ninterface ConfigState {\naccessResult:any;\n}\n\nlet supportTypes = ['ContentType','EditorInterface','Entry','Asset']\nlet accessTypes = ['create','read','update','delete','publish','unpublish','archive','unarchive']\n\nconst  CreateAccessTable =  (props:any)=>{\n  \n\n  if(props.accessResult){\n    console.log('pros',props.accessResult)\n    let accessResult = props.accessResult\n    // props.accessResult.filter((value:any) => value.type.access =='create' )\n    return(\n      <Table>\n      <TableHead>\n          <TableCell></TableCell>\n          {supportTypes.map((value) => <TableCell>{value}</TableCell>)}\n      </TableHead>\n      <TableBody>\n        {accessTypes.map((access) => <TableRow key={access}><TableCell>{access}</TableCell>{supportTypes.map((support)=> <TableCell>{JSON.stringify(accessResult.filter((value:any)=> value.type.access==access && value.type.support==support)[0].value)}</TableCell> )}</TableRow>)}\n      </TableBody>\n       </Table>\n    )\n  }else{\n    console.log('pros','empty')\n    return(<Spinner size=\"large\"/>)\n  }\n  // let temp = props.accessResult\n  // temp.foreach((test:any)=>console.log(test))\n\n  //props.accessResult.foreach((test:any)=>console.log(test))\n  //  let accessResult = JSON.parse(props.accessResult)\n  //  props.accessResult.map((result:any)=> console.log(result))\n   // props.accessResult.filter((result:any) => result.type.support=='Entry' && result.type.access =='read')\n \n}\n\nasync function accessPopulationFunction (supportTypes:any,accessTypes:any,props:any){\n\n  return await Promise.all(accessTypes.map(async (access:any)=> {\n    return await Promise.all(supportTypes.map(async (support:any)=> {\n      if(support.length!=-1) {\n\n      //  console.log('componentDidMount1',support,access,await props.sdk.access.can(access,support))\n        let result = false\n        try {\n          result = await props.sdk.access.can(access,support)\n          console.log(`${access} for ${support} ${result}`)\n        } catch (e) { \n          result = false\n          console.log(`${access} for ${support} not found`)\n        }\n\n        \n        if((access==='create' && support==='EditorInterface') ||\n           (access==='delete' && support==='EditorInterface') ||\n           (access==='publish' && support==='EditorInterface') ||\n           (access==='unpublish' && support==='EditorInterface') ||\n           (access==='archive' && support==='EditorInterface')||\n           (access==='archive' && support==='ContentType')||\n           (access==='unarchive' && support==='EditorInterface')||\n           (access==='unarchive' && support==='ContentType')){\n    \n          return{\n            type:{support,access},\n            value: 'not supported'\n          }\n        }\n\n        return{\n            type:{support,access},\n            value: result\n        }\n      }\n      else{\n        return {}\n      }\n    }))\n  }))\n}\n\nexport default class AccessScreen extends Component<ConfigProps,ConfigState> {\n     constructor(props: any) {\n        super(props);\n        this.state = {accessResult:''}; \n\n      }\n\n      async  componentDidMount() {\n\n        let result = await accessPopulationFunction(supportTypes,accessTypes,this.props)\n        console.log('result',result)\n\n        var accessResultArray:string[] = []\n        \n        result.forEach((value:any) =>{\n           value.forEach((value2:any) =>{\n            accessResultArray.push(value2)\n           })\n          })\n\n        this.setState({\n          accessResult:accessResultArray,\n        })\n      }\n\n      render(){\n        return(\n            <>\n              <Pill label=\"sdk.access.can\" />\n              <CreateAccessTable sdk={this.props.sdk} accessResult={this.state.accessResult} test=\"value\"/>\n            </>\n        )\n      }\n  \n}\n\n// const Access =  (sdk:AppExtensionSDK) => {\n\n//   React.useEffect(()=> {\n    \n//     async function getContentfulInfo() {\n//         // let contentTypes = await sdk.space.getContentTypes()     \n//         // console.log('Access Component',contentTypes)\n//     }\n\n//     getContentfulInfo()\n//   })\n\n\n//   return (\n//     <>\n//       <Paragraph>Hello ACCESS Component</Paragraph>\n//       <p>\n//           sdk.access.can()\n//       </p>\n//     </>\n//   )};\n\n//export default Access;\n","\nimport React, { Component } from 'react';\nimport { List,ListItem,Pill } from '@contentful/forma-36-react-components';\nimport { AppExtensionSDK, PageExtensionSDK } from 'contentful-ui-extensions-sdk';\n\ninterface ConfigProps {\n  sdk: PageExtensionSDK;\n}\ninterface ConfigState {\n  locales: any;\n}\n\nconst CreateLocalesTable = (props: any) => {\n\n  return (\n    <>\n      <List>\n        <ListItem>Default Locale: {props.locales.default}</ListItem>\n      </List>\n    </>\n  )\n}\n\nexport default class LocalesScreen extends Component<ConfigProps, ConfigState> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = { locales: '' };\n\n  }\n\n  async componentDidMount() {\n    console.log(this.props.sdk.user)\n    let locales = await this.props.sdk.locales\n    if (locales)\n      this.setState({ locales: locales, })\n  }\n\n  render() {\n    return (\n      <>\n        <Pill label=\"sdk.locales\" />\n        <CreateLocalesTable locales={this.state.locales} />\n      </>\n    )\n  }\n\n}\n","\nimport React,{Component} from 'react';\nimport { Form,TextField,Button,Pill } from '@contentful/forma-36-react-components';\nimport { AppExtensionSDK, PageExtensionSDK } from 'contentful-ui-extensions-sdk';\n\ninterface ConfigProps {\n  sdk: PageExtensionSDK;\n}\ninterface ConfigState {\n  \n}\n\nconst NavigatorComponent = (props:any)=>{\n\n  var entryId = ''\n  const onClick= (event:any )=>{\n   \n    if(entryId.length != 0 ){\n\n      try {\n        props.sdk.navigator.openEntry(entryId)\n      } catch (error) {\n        props.sdk.notifier.error('Please provide Entry ID')\n        console.log('wrong entryId')\n      }\n      \n      console.log('not empty')\n    }else{\n      console.log('empty')\n    }\n  }\n\n  const onTextChange= (event:any )=>{\n    entryId = event.target.value\n    console.log(event.target.value)\n  }\n\n  return(\n    <>\n        <Pill label=\"sdk.navigator\" />\n        <Form>\n           <TextField  name=\"Entry ID\" id=\"field\" labelText=\"Entry ID\" onChange={onTextChange}></TextField>\n           <Button buttonType=\"primary\" onClick={onClick}>Navigate</Button>\n        </Form>\n    </>\n  )\n}\n\nexport default class NavigatorScreen extends Component<ConfigProps, ConfigState> {\n\n  constructor(props: any) {\n    super(props);\n\n  }\n\n  async componentDidMount() {\n\n\n\n  }\n\n  render() {\n    return (\n      <>\n        <NavigatorComponent sdk={this.props.sdk}/>\n      </>\n    )\n  }\n\n}\n","import React,{Component} from 'react';\nimport {PageExtensionSDK } from 'contentful-ui-extensions-sdk';\nimport {Table,TableHead,TableCell,TableBody, TableRow,Pill,Icon } from '@contentful/forma-36-react-components';\n\ninterface ConfigProps {\n  sdk: PageExtensionSDK;\n}\ninterface ConfigState {\n  scheduleAction:string;\n  users:string,\n  editorInterface:string\n}\n\nconst SpaceScheduleComponent = (props:any)=>{\n\n  let scheduleActions = JSON.parse(props.scheduleActions)\n  console.log('SpaceComponent',scheduleActions)\n \n  return(\n\n    <>\n    <Pill\n      label=\"sdk.space.getAllScheduledActions()\"\n      dragHandleComponent={\n        <Icon\n          icon=\"ArrowUp\"\n          color=\"positive\"\n          // style={{ padding: '0.375rem 0.625rem' }}\n        />\n      }\n    />\n    <Table>\n      <TableHead>\n          <TableCell>Entry Id</TableCell>\n          <TableCell>Date of Schedule</TableCell>\n          <TableCell>Schedule Type</TableCell>\n          <TableCell></TableCell>\n      </TableHead>\n     <TableBody> \n        {scheduleActions.map((scheduleAction:any) => \n          <TableRow> \n            <TableCell>{scheduleAction.entity.sys.id}</TableCell>\n            <TableCell>{scheduleAction.scheduledFor.datetime}</TableCell>\n            <TableCell>{scheduleAction.entity.sys.linkType}</TableCell>\n          </TableRow>)}\n     </TableBody>\n    </Table>\n    </>\n  )\n}\nconst SpaceUserComponent = (props:any)=>{\n\n  let users = JSON.parse(props.users)\n\n  return(<>\n    <Pill\n      label=\"sdk.space.getUsers()\"\n      dragHandleComponent={\n        <Icon\n          icon=\"ArrowUp\"\n          color=\"positive\"\n        // style={{ padding: '0.375rem 0.625rem' }}\n        />\n      } />\n\n    <Table>\n      <TableHead>\n        <TableCell>Name</TableCell>\n        <TableCell>Email</TableCell>\n        <TableCell></TableCell>\n      </TableHead>\n      <TableBody>\n        {users.items.map((user: any) =>\n          <TableRow>\n            <TableCell>{user.firstName}</TableCell>\n            <TableCell>{user.email}</TableCell>\n          </TableRow>)}\n      </TableBody>\n    </Table>\n\n  </>)\n}\nconst SpaceEditorInterface = (props:any)=>{\n\n  let editorInterfaces = JSON.parse(props.editorInterfaces)\n\n  return(<>\n      <Pill\n      label=\"sdk.space.getEditorInterfaces()\"\n      dragHandleComponent={\n        <Icon\n          icon=\"ArrowUp\"\n          color=\"positive\"\n        // style={{ padding: '0.375rem 0.625rem' }}\n        />\n      } />\n\n<Table>\n      <TableHead>\n        <TableCell>ContentType Name</TableCell>\n        <TableCell>Controls</TableCell>\n      </TableHead>\n      <TableBody>\n        {editorInterfaces.items.map((editorInterface: any) =>\n          <TableRow>\n            <TableCell>{editorInterface.sys.contentType.sys.id}</TableCell>\n            <TableCell>{JSON.stringify(editorInterface.controls)}</TableCell>       \n          </TableRow>)}\n      </TableBody>\n    </Table>\n  </>)\n}\n\nexport default class SpaceScreen extends Component<ConfigProps,ConfigState> {\n\n  constructor(props: any) {\n    super(props);\n    this.setState({scheduleAction:'test', users:'test'})\n    console.log('scheduleAction',this.state ?? 'oops')\n  }\n\n  async componentDidMount() {\n\n    const scheduledActions = await this.props.sdk.space.getAllScheduledActions()\n    const users = await this.props.sdk.space.getUsers()\n    const editorInterfaces = await this.props.sdk.space.getEditorInterfaces()\n\n    const scheduledActionsString = JSON.stringify(scheduledActions)\n    const usersString = JSON.stringify(users)\n    const editorInterfaceString = JSON.stringify(editorInterfaces)\n\n    this.setState({scheduleAction:scheduledActionsString, \n                                       users:usersString,  \n                  editorInterface:editorInterfaceString})\n   \n  }\n\n  render() {\n\n    if(this.state)\n      return (\n        <>\n            { <SpaceScheduleComponent scheduleActions={this.state.scheduleAction}/> }\n            { <SpaceUserComponent users={this.state.users}/> }\n            { <SpaceEditorInterface editorInterfaces={this.state.editorInterface}/>}\n        </>\n      )\n\n      return(<></>)\n  }\n\n}","\nimport React, { Component } from 'react';\nimport {Pill, Table, TableHead, TableRow, TableCell, TableBody } from '@contentful/forma-36-react-components';\nimport { AppExtensionSDK, PageExtensionSDK } from 'contentful-ui-extensions-sdk';\n// import { highlight, languages } from 'prismjs/components/prism-core';\n// import 'prismjs/components/prism-clike';\n// import 'prismjs/components/prism-javascript';\nimport Editor from 'react-simple-code-editor';\n\ninterface ConfigProps {\n  sdk: PageExtensionSDK;\n}\n\nconst code = `function add(a, b) {\n  return a + b;\n}`;\n\nconst CreateUserTable = (props: any) => {\n  return (\n    <>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell>Email</TableCell>\n            <TableCell>Admin</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableRow>\n            <TableCell>{props.user.firstName + \" \" + props.user.lastName}</TableCell>\n            <TableCell>{props.user.email}</TableCell>\n            <TableCell>{String(props.user.spaceMembership.admin)}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </>\n  )\n\n}\n\nexport default class UserScreen extends Component<ConfigProps> {\n  constructor(props: any) {\n    super(props);\n    this.state = { code };\n\n  }\n\n  async componentDidMount() {\n\n    console.log('user info', JSON.stringify(this.props.sdk.user.spaceMembership.admin))\n  }\n\n  render() {\n    return (\n      <>\n            <Pill label=\"sdk.user\"/>\n        <CreateUserTable user={this.props.sdk.user} />\n        {/* <Editor\n          value={this.state.code}\n          onValueChange={code => this.setState({ code })}\n          highlight={}\n          padding={10}\n          style={{\n            fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n            fontSize: 12,\n          }} */}\n        {/* /> */}\n      </>\n    )\n  }\n\n}\n","import React, { Component } from 'react';\nimport { Card,Icon, Heading, Form, Workbench, Paragraph, Tabs, Tab,FormLabel ,Pill } from '@contentful/forma-36-react-components';\nimport '@contentful/forma-36-react-components/dist/styles.css';\nimport { MultipleEntryReferenceEditor } from '@contentful/field-editor-reference';\nimport { AppExtensionSDK, PageExtensionSDK } from 'contentful-ui-extensions-sdk';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { css } from 'emotion';\nimport Access from './AccessScreen'\nimport Locales from './LocalesScreen'\nimport Navigator from './NavigatorScreen'\nimport Space from './SpaceScreen'\nimport User from './UserScreen'\n\ninterface PageProps {\n  sdk: PageExtensionSDK;\n}\n\ninterface PageState {\n  installationParameters: {},\n}\n\nconst ParametersComponent = (props:any)=>{\n  console.log('ParametersComponent',JSON.stringify(props))\n\n  return(\n    <>\n      <Pill label=\"sdk.parameters.installation\" />\n      <Form>\n          <FormLabel htmlFor=\"Param 1\">{props.installationParams.param1}</FormLabel>\n          <FormLabel htmlFor=\"Param 2\">{props.installationParams.param2}</FormLabel>\n      </Form>\n    </>\n  )\n}\n\nexport default class Page extends Component<PageProps,PageState>{\n\n  constructor(props: any){\n    super(props);\n    this.state = { installationParameters: {}};\n  }\n\n  async componentDidMount() {\n    // Get current parameters of the app.\n    // If the app is not installed yet, `parameters` will be `null`.\n    console.log('componentDidMount',this.props.sdk.parameters)    \n    let installationParameters = await this.props.sdk.parameters.installation\n    if (installationParameters){\n      this.setState({installationParameters:installationParameters})\n      console.log('ConfiguerComponent',this.state.installationParameters)\n    }\n    }\n\n  getSDK(){\n    return this.props.sdk\n  }\n\n\n  render(){\n    return (\n      <>\n      <Card>\n      <div className=\"flexbox-container\">\n          <Icon icon=\"ReceiptTrimmed\" size=\"large\"/>\n          <Heading>LOCATION_PAGE</Heading>\n      </div>\n      <Workbench className={css({ margin: '80px' })}>\n      \n      <Form>\n        <Heading>App Framework SDK playground</Heading>\n        <Paragraph>Welcome to your contentful app. This is your config page...</Paragraph>\n        <BrowserRouter >\n          <Tabs\n            role=\"navigation\"\n            withDivider\n          >\n            <Route\n                 render={tabprops => (\n                  <>\n                      {/* <Link to=\"/access\">Access</Link> */}\n                      <Tab\n                        id=\"access\"\n                        selected={tabprops.location.pathname === 'access'}\n                        onSelect={()=>{\n                          tabprops.history.push('/access') \n                          //console.log('access',JSON.stringify(this.props.sdk)) \n                        }}\n                      >\n                        Access\n                      </Tab>\n                      <Tab\n                        id=\"locales\"\n                        onSelect={()=>{\n                          tabprops.history.push('/locales')\n                        }}\n                      >\n                        Locales\n                      </Tab>\n                      <Tab\n                        id=\"navigator\"\n                        onSelect={()=>{\n                          tabprops.history.push('/navigator')\n                        }}\n                      >\n                        Navigator\n                      </Tab>\n                      <Tab\n                        id=\"parameters\"\n                        onSelect={()=>{\n                          tabprops.history.push('/parameters')\n                        }}\n                      >\n                        Parameters\n                      </Tab>\n                      <Tab\n                        id=\"space\"\n                        onSelect={()=>{\n                          tabprops.history.push('/space')\n                        }}\n                      >\n                        Space\n                      </Tab>\n                      <Tab\n                        id=\"user\"\n                        onSelect={()=>{\n                          tabprops.history.push('/user')\n                        }}\n                      >\n                        User\n                      </Tab> \n                     \n                  </>\n                )}           \n            />\n          </Tabs> \n          <Switch>\n\n              {/* <Route path=\"/parameters\"  component={ParametersComponent}/> */}\n              <Route path=\"/parameters\" render={routeProps => <ParametersComponent  installationParams={this.state.installationParameters}/>}/>\n              <Route path=\"/access\" render={routeProps => <Access {...routeProps} sdk={this.props.sdk}/>}/>\n              <Route path=\"/locales\" render={routeProps => <Locales {...routeProps} sdk={this.props.sdk}/>}/>\n              <Route path=\"/navigator\" render={routeProps => <Navigator {...routeProps} sdk={this.props.sdk}/>}/>\n              <Route path=\"/space\" render={routeProps => <Space {...routeProps} sdk={this.props.sdk}/>}/>\n              <Route path=\"/user\" render={routeProps => <User {...routeProps} sdk={this.props.sdk}/>}/>\n          </Switch>\n        </BrowserRouter >\n      </Form>\n    </Workbench>\n      </Card>\n     \n      </>\n    )\n  }\n}\n\n","import React from 'react';\nimport { Paragraph } from '@contentful/forma-36-react-components';\nimport { SidebarExtensionSDK } from 'contentful-ui-extensions-sdk';\n\ninterface SidebarProps {\n  sdk: SidebarExtensionSDK;\n}\n\nconst Sidebar = (props: SidebarProps) => {\n  return <Paragraph>Hello Sidebar Component</Paragraph>;\n};\n\nexport default Sidebar;\n","import React, { Component } from 'react';\nimport {Pill,Card,Tag,TextInput, Button } from '@contentful/forma-36-react-components';\nimport ReactJson from 'react-json-view'\n\nexport interface AppInstallationParameters { }\n\ninterface ConfigProps {\n    sdk: any;\n  }\n  \ninterface ConfigState {\n  field:{};\n  fieldValue:''\n  fieldValueChanges:''\n}\n\n\nexport default class SdkField extends Component<ConfigProps,ConfigState> {\n     constructor(props: any) {\n        super(props);\n        this.state={field:{},fieldValue:'',fieldValueChanges:''}\n\n        // this.props.sdk.field.onValueChanged('en-GB',(value:any)=>{\n        //   console.log(value)\n        // })\n\n      }\n      \n      async componentDidMount(){\n        let field = await this.props.sdk.field\n        let fieldValue = field.getValue()\n        this.setState({field:field,fieldValue:fieldValue})\n\n\n        this.props.sdk.field.onValueChanged((value:any) =>{\n            this.setState({fieldValueChanges:value})\n        })\n      }\n\n      onChange = (e: any) => {\n        const value = e.currentTarget.value;\n        // this.setState({ value });\n        if (value) {\n          this.props.sdk.field.setValue(value);\n        } else {\n          this.props.sdk.field.removeValue();\n        }\n      };\n\n       onClick =(e:any)=>{\n        this.props.sdk.field.removeValue()\n        this.setState({fieldValue:'',fieldValueChanges:''})\n      }\n\n      render(){\n        return(\n            <>\n                   <Card>\n                    <Tag tagType=\"primary\">sdk.field</Tag>\n                    <br />\n                    <br />\n\n                    <Pill label=\"sdk.field\"/>\n                    <div>\n                      <ReactJson src={this.state.field} collapsed={0}/>\n                   </div>\n\n                     <Pill label=\"sdk.field.setValue(value):\"/>\n                    <TextInput id=\"input\" onChange={this.onChange} value={this.state.fieldValue}></TextInput> \n \n                   <Pill label=\"sdk.field.removeValue():\"/>\n                    <div>\n                      <Button onClick={this.onClick}>Remove</Button>\n                   </div>\n\n                   <Pill label=\"sdk.field.onValueChanged\" />\n                   <TextInput onChange={this.onChange} value={this.state.fieldValueChanges}></TextInput>\n                  </Card>\n            </>\n        )\n      }\n  \n}\n\n\n","import React, { Component } from 'react';\nimport {Icon,Heading,Card, TextInput, Button, Modal,Pill } from '@contentful/forma-36-react-components';\nimport { FieldExtensionSDK } from 'contentful-ui-extensions-sdk';\nimport SdkLocation from '../sdk components/SdkLocation'\nimport SdkEditor from '../sdk components/SdkEditor'\nimport SdkEntry from '../sdk components/SdkEntry'\nimport SdkContentType from '../sdk components/SdkContentType'\nimport SdkParams from '../sdk components/SdkParams'\nimport SdkField from '../sdk components/SdkField'\nimport SdkDialog from '../sdk components/SdkDialog'\nimport { MultipleEntryReferenceEditor } from '@contentful/field-editor-reference';\n\n\ninterface FieldProps {\n  sdk: FieldExtensionSDK;\n}\ninterface ConfigState {\n  value: string,\n  instanceParams:string,\n  installationParams:string,\n  showModal:boolean\n}\n\n\nconst ModalComponent = (props: any) => {\n\n  const [isShown, setShown] = React.useState(false);\n\n  return (\n    <>\n      <Modal title=\"Centered modal\" isShown={isShown} onClose={setShown}>\n        {\n          () => (\n            <>\n              <Modal.Header title=\"Title\" />\n              <Modal.Content>Hello from controlled modal window</Modal.Content>\n              <Modal.Controls>\n                <Button buttonType=\"positive\" onClick={() => setShown(false)}>\n                    Confirm\n                </Button>\n                <Button buttonType=\"muted\" onClick={() => setShown(false)}>\n                    Close\n                </Button>\n              </Modal.Controls>\n            </>\n          )\n        }\n      </Modal>\n    </>\n  )\n}\n\nexport default class FieldScreen extends Component<FieldProps, ConfigState> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      value: props.sdk.field.getValue() || '',\n      showModal:false,\n      installationParams:'',\n      instanceParams:''\n    };\n\n    this.props.sdk.window.updateHeight(1000)\n  }\n\n  async componentDidMount() {\n\n    let instanceParameters = await JSON.stringify(this.props.sdk.parameters.instance)\n    let installationParameters = await JSON.stringify(this.props.sdk.parameters.installation)\n\n    this.setState({instanceParams:instanceParameters,installationParams:installationParameters})\n    console.log('componentDidMount',this.state.instanceParams)\n\n    // this.props.sdk.field.onValueChanged((value:any)=>{\n    //   console.log(value)\n    // })\n    // this.props.sdk.entry.fields.field1.onValueChanged('en-GB', (value) => {\n    //   this.props.sdk.entry.fields.field2.setValue(value)\n    // })\n  }\n\n\n  onChange = (e: any) => {\n    const value = e.currentTarget.value;\n    this.setState({ value });\n    if (value) {\n      this.props.sdk.field.setValue(value);\n    } else {\n      this.props.sdk.field.removeValue();\n    }\n  };\n\n  onButtonClick = (e: any) => {\n    console.log('button clicked')\n  }\n\n  render() {\n\n    return (<>\n      <Card>\n        <div className=\"flexbox-container\">\n          <Icon icon=\"ReceiptTrimmed\" size=\"large\"/>\n          <Heading>LOCATION_ENTRY_FIELD</Heading>\n        </div>\n        <SdkLocation sdk={this.props.sdk}/>\n        <SdkField sdk={this.props.sdk}/>\n        <SdkEditor sdk={this.props.sdk}/>\n        <SdkEntry sdk={this.props.sdk}/>\n        <SdkContentType sdk={this.props.sdk}/>\n        <SdkParams sdk={this.props.sdk}/>\n        <SdkDialog sdk={this.props.sdk}/>\n\n        {/* <Pill label=\"sdk.field.onValueChanged\" />\n        <TextInput\n          name=\"example\"\n          type=\"text\"\n          value={this.state.value}\n          onChange={this.onChange}\n        /> */}\n        {/* <Pill label=\"sdk.parameters.instance\" />\n        <TextInput value={this.state.instanceParams}></TextInput>\n\n        <Pill label=\"sdk.parameters.installation\" />\n        <TextInput value={this.state.installationParams}></TextInput> */}\n      </Card>\n    </>\n    )\n  }\n\n}\n\n","import React, { Component } from 'react';\nimport {Card, Paragraph,Heading,Icon } from '@contentful/forma-36-react-components';\nimport { DialogExtensionSDK } from 'contentful-ui-extensions-sdk';\nimport SdkLocation from '../sdk components/SdkLocation'\nimport SdkEditor from '../sdk components/SdkEditor'\nimport SdkEntry from '../sdk components/SdkEntry'\nimport SdkContentType from '../sdk components/SdkContentType'\nimport SdkParams from '../sdk components/SdkParams'\nimport SdkField from '../sdk components/SdkField'\nimport SdkDialog from '../sdk components/SdkDialog'\ninterface DialogProps {\n  sdk: DialogExtensionSDK;\n}\ninterface ConfigState {\n\n}\n\nexport default class DialogScreen extends Component<DialogProps, ConfigState> {\n\n  render(){\n    return(\n      <Card>\n         <div className=\"flexbox-container\">\n          <Icon icon=\"ReceiptTrimmed\" size=\"large\"/>\n          <Heading>LOCATION_DIALOG</Heading>\n        </div>\n        <SdkLocation sdk={this.props.sdk}/>\n        {/* <SdkField sdk={this.props.sdk}/>\n        <SdkEditor sdk={this.props.sdk}/> */}\n        {/* <SdkEntry sdk={this.props.sdk}/> */}\n        {/* <SdkContentType sdk={this.props.sdk}/> */}\n        <SdkParams sdk={this.props.sdk}/>\n        {/* <SdkDialog sdk={this.props.sdk}/> */}\n      </Card>\n    )\n  }\n}\n\n{/* // const Dialog = (props: DialogProps) => {\n//   return <Paragraph>Hello Dialog Component</Paragraph>;\n// };\n\n// export default Dialog; */}\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport {\n  AppExtensionSDK,\n  FieldExtensionSDK,\n  SidebarExtensionSDK,\n  DialogExtensionSDK,\n  EditorExtensionSDK,\n  PageExtensionSDK,\n  BaseExtensionSDK,\n  init,\n  locations\n} from 'contentful-ui-extensions-sdk';\nimport '@contentful/forma-36-react-components/dist/styles.css';\nimport '@contentful/forma-36-fcss/dist/styles.css';\nimport './index.css';\n\nimport Config from './components/ConfigScreen';\nimport EntryEditor from './components/EntryEditor';\nimport Page from './components/Page';\nimport Sidebar from './components/Sidebar';\nimport FieldScreen from './components/Field';\nimport Dialog from './components/Dialog';\n\ninit((sdk: BaseExtensionSDK) => {\n  const root = document.getElementById('root');\n\n  // All possible locations for your app\n  // Feel free to remove unused locations\n  // Dont forget to delete the file too :)\n  const ComponentLocationSettings = [\n    {\n      location: locations.LOCATION_APP_CONFIG,\n      component: <Config sdk={(sdk as unknown) as AppExtensionSDK} />\n    },\n    {\n      location: locations.LOCATION_ENTRY_FIELD,\n      component: <FieldScreen sdk={(sdk as unknown) as FieldExtensionSDK} />\n    },\n    {\n      location: locations.LOCATION_ENTRY_EDITOR,\n      component: <EntryEditor sdk={(sdk as unknown) as EditorExtensionSDK} />\n    },\n    {\n      location: locations.LOCATION_DIALOG,\n      component: <Dialog sdk={(sdk as unknown) as DialogExtensionSDK} />\n    },\n    {\n      location: locations.LOCATION_ENTRY_SIDEBAR,\n      component: <Sidebar sdk={(sdk as unknown) as SidebarExtensionSDK} />\n    },\n    {\n      location: locations.LOCATION_PAGE,\n      component: <Page sdk={(sdk as unknown) as PageExtensionSDK} />\n    }\n  ];\n\n  // Select a component depending on a location in which the app is rendered.\n  //\n  // NB: Location \"app-config\" is auto-included in the list as most apps need it\n  // You can remove it (and on the app definition also) in case the app\n  // doesn't require it\n  ComponentLocationSettings.forEach(componentLocationSetting => {\n    if (sdk.location.is(componentLocationSetting.location)) {\n      render(componentLocationSetting.component, root);\n    }\n  });\n});\n"],"sourceRoot":""}